##Thoughts: Learning concepts of Regex (don't use /g when using to test items in array), recursive function. Simple is better.

function permAlone(str) {
 
var strArr=str.split("");
var perm=[];

//use Heap's Algorithm to generate permutations and push into an array
function heaps(arr){
   
    function swap(a, b){
      var temp = arr[a];
      arr[a] = arr[b];
      arr[b] = temp;
    }
    
    var n = arr.length;
    
    function generate(n){
      if(n===1){
        perm.push(arr.join(""));  
      } else{
        for(var i=0; i<n; i++){
          generate(n-1);     
          if(n%2===0){
            swap(i, n-1);
          } else {          
            swap(0, n-1);
        }
      }
    }
  }
  
  generate(arr.length);
 }

  heaps(strArr);
  
//match strings with repeated letter, minus number from total count
  var count=perm.length;
  var re=/(\w)(\1+)/;

  for(var j=0; j<perm.length; j++){
    if(re.test(perm[j])){
      count--;
    }
  }

  return count;
}

permAlone('aab');
